1.Hibernate的基本概念
  1）Hibernate框架的作用和优点
  *Hibernate框架是一个数据访问框架。通过Hibernate框架可以对数据库进行增删改查操作。（持久层框架）
  *Hibernate优点：
  --简单，可以简化数据库操作代码
  --Hibernate可以自动生成SQL,可以将ResultSet记录和实体类自动映射
  --Hibernate具有通用性，可以方便数据库移植
 原有JDBC访问的缺点：
  --需要编写大量的复杂的SQL
  --需要编写实体对象和记录之间的映射代码 
  --数据库移植时，需要修改大量的SQL语句

  2）Hibernate设计思想
  Hibernate是基于ORM思想设计的。
  Hibernate是对JDBC技术的封装。
  Object Relation Mapping称为对象关系映射。负责Java对象和数据库表数据之间的映射。
  Hibernate是一款ORM工具，其他的ORM工具还有MyBatis,JPA等。
  ORM工具在完成Java对象和数据库数据之间映射后，在查询时，直接利用工具取出对象；在增删改操作时，直接利用工具将对象更新到数据库表中。中间的SQL+JDBC细节，都被封装在了工具底层，不需要程序员参与。

*2.Hibernate的基本使用
 1）Hibernate主要结构
   a.hibernate.cfg.xml(仅1个)
   Hibernate主配置文件，主要定义数据连接参数和框架设置参数。
   b.Entity实体类(n个,一个表一个)
   主要用于封装数据库数据。
   c.hbm.xml映射文件(n个)
   主要描述实体类和数据表之间的映射信息。描述表<-->类型，
字段<-->属性的对应关系。
   d.Hibernate API

 2）Hibernate主要API
   a.Configuration
    用于加载hibernate.cfg.xml配置信息。用于创建SessioFactory
   b.SessionFactory
   存储了hbm.xml中描述的信息，内置了一些预编译的SQL，可以创建Session对象
   c.Session
   负责对数据表执行增删改查操作。
表示java程序与数据的一次连接会话
   d.Query
   负责对数据表执行特殊查询操作。
   e.Transaction
   负责Hibernate操作的事务管理。
  默认情况下，Hibernate事务关闭了自动提交功能，需要显式追加事务管理。
   
 3）Hibernate主要使用步骤
   a.建立数据库表
   b.建立java工程，引入Hibernate开发包+数据库驱动包
   c.添加src/hibernate.cfg.xml追加配置参数
   d.编写Entity实体类
   e.编写hbm.xml映射描述信息
   f.利用Hibernate API 实现DAO

3.Hibernate映射类型
  hbm.xml在描述字段和属性映射时，采用type属性指定映射类型。
  映射类型作用：主要负责实现属性值和字段值之间的转化。
  type映射类型值有两种写法：
  a.指定Java类型，例如java.lang.String,java.lang.Integer
  b.指定Hibernate类型，具体如下
   --整数byte,short,integer,long
   --浮点数 float,double
   --字符串 string
   --日期和时间
     date,time,timestamp
   --布尔值
     yes_no,true_false
boolean <----> char(1)
true/false <--yes_no--> Y/N  
true/false <--true_false--> T/F 
   --其它blob,clob,big_decimal,
big_integer 

4.Hibernate主键生成方式
  Hibernate负责管理主键值。Hibernate提供了多种主键生成方式。
主要由以下几种：
  *a.sequence
   可以按指定序列生成主键值。只适用于Oracle数据库。
   <generator class="sequence">
     <param name="sequence">
        序列名字
     </param>
   </generator>
  *b.identity
 按数据库自动增长机制生成主键值。
一般适用于MySQL,SQLServer数据库。
   <generator class="identity">
   </generator>
  *c.native
 hibernate会根据方言类型不同，选择不同的主键生成方式。如果是OracleDialect会选择sequence,如果是MySQLDialect会选择identity.
   <generator class="native">
   </generator>
  *d.assinged
  Hibernate会放弃主键生成，采用此方法，需要在程序中指定主键值。
   <generator class="assinged">
   </generator>
  e.increment
  hibernate先执行select max(id)..语句获取主键最大值，执行加1操作，然后再调用insert语句插入。
   <generator class="increment">
   </generator>
  f.uuid/hilo
   uuid指的是按UUID算法生成一个主键值(字符串类型)。hilo指的是按高低位算法生成一个主键值(数值类型)
   <generator class="hilo">
   </generator>



